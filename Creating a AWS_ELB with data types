provider "aws" {
    region     = "us-east-1"
    access_key = "AKIAT7TJ4FYSLLODEDHZ"
    secret_key = "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"
 }

variable "elbname" {
   type = string
 }

variable "azname" {
   type = list
   default = ["us-east-1a", "us-east-1b", "us-east-1c"]
 }

variable "timeout" {
   type = number
 }

resource "aws_elb" "bar" {
  name               = var.elbname
  availability_zones = var.azname

  listener {
    instance_port     = 8000
    instance_protocol = "http"
    lb_port           = 80
    lb_protocol       = "http"
  }

  health_check {
    healthy_threshold   = 2
    unhealthy_threshold = 2
    timeout             = 3
    target              = "HTTP:8000/"
    interval            = 30
  }


  cross_zone_load_balancing   = true
  idle_timeout                = var.timeout
  connection_draining         = true
  connection_draining_timeout = var.timeout

  tags = {
    Name = "sanvika"
  }
}


===================================================================================================
======================================================================================================

===========================         MAP         ===========================
provider "aws" {
    region     = "us-east-1"
    access_key = "AKIAT7TJ4FYSGVAFW2R6"
    secret_key = "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"
 }

variable "elbname" {
   type = string
 }

variable "azname" {
   type = list
   default = ["us-east-1a", "us-east-1b", "us-east-1c"]
 }

variable "timeout" {
   type = number
 }

resource "aws_elb" "bar" {
  name               = var.elbname
  availability_zones = var.azname

  listener {
    instance_port     = 8000
    instance_protocol = "http"
    lb_port           = 80
    lb_protocol       = "http"
  }

  health_check {
    healthy_threshold   = 2
    unhealthy_threshold = 2
    timeout             = 3
    target              = "HTTP:8000/"
    interval            = 30
  }


  cross_zone_load_balancing   = true
  idle_timeout                = var.timeout
  connection_draining         = true
  connection_draining_timeout = var.timeout

  tags = {
    Name = "sanvika"
  }
}

variable "mapvar" {
     type  =map
     default = {
      "dev" = "t2.nano"
      "test" = "t2.small"
      "prod" = "t2.micro"
   }
}

variable "instancetag" {
    type = list
    default = ["guru-1","tanshi","sanvi"]
 }

variable "image" {
    type = list
    default = ["ami-0cff7528ff583bf9a","ami-065efef2c739d613b","ami-09f0bb50202ca06b0"]
  }


resource "aws_instance" "dev" {
  instance_type = var.mapvar["dev"]
  ami           = var.image[0]
  tags = }
    name = var.instancetag[0]
   }
 }

resource "aws_instance" "test" {
  instance_type = var.mapvar["test"]
  ami           = var.image[1]
  tags = {
   name = var.instancetag
   }
 }

resource "aws_instance" "prod" {
  instance_type = var.mapvar["prod"]
  ami           = var.image[2]
  tags = {
    name = var.instancetag[2]
   }
 }



=====================================================================================================
=======================================================================================

======================                COUNT                 ===============================

Example - 1:-
---------------------

provider "aws" {
   region     = "us-east-1"
   access_key = "AKIAT7TJ4FYSGVAFW2R6"
   secret_key = "BCkT8gx9FbaOvvSsYWPMNxG7tllFaupF98KQCTg6"
 }

resource "aws_instance" "guru" {
 instance_type = "t2.micro"
 ami           = "ami-0cff7528ff583bf9a"
 count = 3  ##################################################( By using using count we can create a no.of services like 100 or above at a time) #############################
 tags = {
   name = "niya.${count.index}"
  }
}


Example -2 
-------------------------

provider "aws" {
   region     = "us-east-1"
   access_key = "AKIAT7TJ4FYSGVAFW2R6"
   secret_key = "BCkT8gx9FbaOvvSsYWPMNxG7tllFaupF98KQCTg6"
 }

variable "instancetag" {
   type = list
   default = ["dev-dept","test-dept","prod-dept"]
}

variable "instancetype" {
   type = list
   default = ["t2.mirco","t2.nano","t2.small"]
}

variable "image" {
   type = list
   default = ["ami-0cff7528ff583bf9a","ami-0cff7528ff583bf9a","ami-0cff7528ff583bf9a"]
}

resource "aws_instance" "guru" {
 instance_type = var.instancetype[count.index]
 ami           = var.image[count.index]
 count = 3      
 tags = {
   name = var.instancetag[count.index]
  }
}



======================================================================

#################### By this below example we are going to create a every server 3 times at a time    ######################################

provider "aws" {
   region     = "us-east-1"
   access_key = "AKIAT7TJ4FYSGVAFW2R6"
   secret_key = "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"
 }

variable "instancetag" {
   type = list
   default = ["dev-dept","test-dept","prod-dept"]
}

variable "instancetype" {
   type = list
   default = ["t2.mirco","t2.nano","t2.small"]
}

variable "image" {
   type = list
   default = ["ami-0cff7528ff583bf9a","ami-0cff7528ff583bf9a","ami-0cff7528ff583bf9a"]
}

resource "aws_instance" "guru" {
 instance_type = var.instancetype[0]
 ami           = var.image[0]
 count = 3      
 tags = {
   name = var.instancetag[0]
  }
}

resource "aws_instance" "niya" {
 instance_type = var.instancetype[1]
 ami           = var.image[1]
 count = 3      
 tags = {
   name = var.instancetag[1]
  }
}

resource "aws_instance" "gehna" {
 instance_type = var.instancetype[2]
 ami           = var.image[2]
 count = 3      
 tags = {
   name = var.instancetag[2]
  }
}

